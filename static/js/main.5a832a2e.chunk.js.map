{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.jsx","components/Header/Header.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Footer/footer.module.css","components/Header/header.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handelCountryChange","fetchedCountries","setFetchedCountries","FormControl","formcontrol","NativeSelect","defaultValue","onChange","e","target","i","key","Footer","footer","Header","header","App","state","fetchedData","setState","this","style","src","corona","alt","image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a832a2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1vF5W\",\"card\":\"Cards_card__26Lgq\",\"infected\":\"Cards_infected__182CK\",\"recovered\":\"Cards_recovered__3vTdn\",\"deaths\":\"Cards_deaths__Wy5Nm\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.infected)}>\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Infected\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <CountUp\r\n                  start={0}\r\n                  end={confirmed.value}\r\n                  duration={2.5}\r\n                  seperator=\",\"\r\n                ></CountUp>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                Number of active cases of covid 19\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.recovered)}>\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Recovered\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <CountUp\r\n                  start={0}\r\n                  end={recovered.value}\r\n                  duration={2.5}\r\n                  seperator=\",\"\r\n                ></CountUp>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                Number of recovery from covid 19\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.deaths)}>\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deaths\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <CountUp\r\n                  start={0}\r\n                  end={deaths.value}\r\n                  duration={2.5}\r\n                  seperator=\",\"\r\n                ></CountUp>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                Number of deaths cause by covid 19\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  \r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    // console.log(response);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api/index\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  },[]);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Infected\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0,0,255,.5)\",\r\n              \"rgba(0,255,0,.5)\",\r\n              \"rgba(255,0,0,.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries } from \"../../api/index\";\r\n\r\nconst CountryPicker = ({handelCountryChange}) => {\r\n\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={styles.formcontrol}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e)=>{handelCountryChange(e.target.value)}}> \r\n          <option value=\"\">Global</option>\r\n\t\t  {fetchedCountries.map((country, i) =><option key={i} value={country}>{country}</option>)}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport styles from \"./footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className={styles.footer}>\r\n      <footer>\r\n        <h3>&copy; Jatin Pratap Singh</h3>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport styles from \"./header.module.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <footer>\r\n        <h3>Live Data </h3>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker, Header, Footer } from \"./components\";\r\nimport style from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\nimport corona from \"./images/image.png\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handelCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className={style.container}>\r\n          <img src={corona} alt=\"COVID !9\" className={style.image} />\r\n          <Cards data={data} />\r\n          <CountryPicker handelCountryChange={this.handelCountryChange} />\r\n          <Chart data={data} country={country} />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__xcCJ8\",\"image\":\"App_image__1Ertd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3BjPY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formcontrol\":\"CountryPicker_formcontrol__1gEB-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__2LXkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__ocVg9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}